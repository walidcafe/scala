t7187.scala:16: error: _ must follow method; cannot follow () => String
  val t1f: Any       = foo() _ // error: _ must follow method
                          ^
t7187.scala:19: error: type mismatch;
 found   : String
 required: () => Any
  val t2a: () => Any = bar   // error: no eta-expansion of zero-arglist-methods (nullary methods)
                       ^
t7187.scala:20: error: not enough arguments for method apply: (i: Int): Char in class StringOps.
Unspecified value parameter i.
  val t2b: () => Any = bar() // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
                          ^
t7187.scala:23: error: not enough arguments for method apply: (i: Int): Char in class StringOps.
Unspecified value parameter i.
  val t2e: Any       = bar() _ // error: not enough arguments for method apply
                          ^
t7187.scala:29: error: _ must follow method; cannot follow String
  val t3d: Any       = baz() _ // error: _ must follow method
                          ^
t7187.scala:38: error: missing argument list for method zup in class EtaExpandZeroArg
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `zup _` or `zup(_)` instead of `zup`.
  val t5a = zup // error in 2.13, eta-expansion in 3.0
            ^
t7187.scala:12: warning: An unapplied 0-arity method was eta-expanded (due to the expected type () => Any), rather than applied to `()`.
Write foo() to invoke method foo, or change the expected type.
  val t1b: () => Any = foo   // eta-expansion, but lint warning
                       ^
t7187.scala:13: warning: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method foo,
or remove the empty argument list from its definition (Java-defined methods are exempt).
In Scala 3, an unapplied method like this will be eta-expanded into a function.
  val t1c: () => Any = { val t = foo; t } // `()`-insertion because no expected type
                                 ^
t7187.scala:21: warning: Methods without a parameter list and by-name params can no longer be converted to functions as `m _`, write a function literal `() => m` instead
  val t2c: () => Any = bar _ // warning: eta-expanding a nullary method
                       ^
t7187.scala:22: warning: Methods without a parameter list and by-name params can no longer be converted to functions as `m _`, write a function literal `() => m` instead
  val t2d: Any       = bar _ // warning: eta-expanding a nullary method
                       ^
t7187.scala:26: warning: An unapplied 0-arity method was eta-expanded (due to the expected type () => Any), rather than applied to `()`.
Write baz() to invoke method baz, or change the expected type.
  val t3a: () => Any = baz   // eta-expansion, but lint warning
                       ^
t7187.scala:32: warning: An unapplied 0-arity method was eta-expanded (due to the expected type () => Any), rather than applied to `()`.
Write zap() to invoke method zap, or change the expected type.
  val t4a: () => Any = zap     // eta-expansion, but lint warning
                       ^
t7187.scala:33: warning: An unapplied 0-arity method was eta-expanded (due to the expected type () => Any), rather than applied to `()`.
Write zap()() to invoke method zap, or change the expected type.
  val t4b: () => Any = zap()   // ditto
                          ^
t7187.scala:40: warning: Eta-expansion performed to meet expected type AcciSamOne, which is SAM-equivalent to Int => Int,
even though trait AcciSamOne is not annotated with `@FunctionalInterface`;
to suppress warning, add the annotation or write out the equivalent function literal.
  val t5AcciSam: AcciSamOne = zup // ok, but warning
                              ^
8 warnings
6 errors
